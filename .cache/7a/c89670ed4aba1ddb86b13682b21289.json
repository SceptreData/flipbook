{"id":"node_modules/pako/lib/utils/common.js","dependencies":[{"name":"D:\\projects\\powerent\\flipbook\\package.json","includedInParent":true,"mtime":1622148961785},{"name":"D:\\projects\\powerent\\flipbook\\node_modules\\pako\\package.json","includedInParent":true,"mtime":1622148203168}],"generated":{"js":"'use strict';\n\n\nconst _has = (obj, key) => {\n  return Object.prototype.hasOwnProperty.call(obj, key);\n};\n\nmodule.exports.assign = function (obj /*from1, from2, from3, ...*/) {\n  const sources = Array.prototype.slice.call(arguments, 1);\n  while (sources.length) {\n    const source = sources.shift();\n    if (!source) { continue; }\n\n    if (typeof source !== 'object') {\n      throw new TypeError(source + 'must be non-object');\n    }\n\n    for (const p in source) {\n      if (_has(source, p)) {\n        obj[p] = source[p];\n      }\n    }\n  }\n\n  return obj;\n};\n\n\n// Join array of chunks to single array.\nmodule.exports.flattenChunks = (chunks) => {\n  // calculate data length\n  let len = 0;\n\n  for (let i = 0, l = chunks.length; i < l; i++) {\n    len += chunks[i].length;\n  }\n\n  // join chunks\n  const result = new Uint8Array(len);\n\n  for (let i = 0, pos = 0, l = chunks.length; i < l; i++) {\n    let chunk = chunks[i];\n    result.set(chunk, pos);\n    pos += chunk.length;\n  }\n\n  return result;\n};\n"},"sourceMaps":{"js":{"mappings":[{"source":"node_modules/pako/lib/utils/common.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules/pako/lib/utils/common.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/pako/lib/utils/common.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/pako/lib/utils/common.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/pako/lib/utils/common.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/pako/lib/utils/common.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/pako/lib/utils/common.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/pako/lib/utils/common.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/pako/lib/utils/common.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/pako/lib/utils/common.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/pako/lib/utils/common.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/pako/lib/utils/common.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/pako/lib/utils/common.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/pako/lib/utils/common.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/pako/lib/utils/common.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/pako/lib/utils/common.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/pako/lib/utils/common.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/pako/lib/utils/common.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/pako/lib/utils/common.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/pako/lib/utils/common.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/pako/lib/utils/common.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/pako/lib/utils/common.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/pako/lib/utils/common.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/pako/lib/utils/common.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/pako/lib/utils/common.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules/pako/lib/utils/common.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules/pako/lib/utils/common.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules/pako/lib/utils/common.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules/pako/lib/utils/common.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules/pako/lib/utils/common.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules/pako/lib/utils/common.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"node_modules/pako/lib/utils/common.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"node_modules/pako/lib/utils/common.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"node_modules/pako/lib/utils/common.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"node_modules/pako/lib/utils/common.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"node_modules/pako/lib/utils/common.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"node_modules/pako/lib/utils/common.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"node_modules/pako/lib/utils/common.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"node_modules/pako/lib/utils/common.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"node_modules/pako/lib/utils/common.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"node_modules/pako/lib/utils/common.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"node_modules/pako/lib/utils/common.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"node_modules/pako/lib/utils/common.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"node_modules/pako/lib/utils/common.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"node_modules/pako/lib/utils/common.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"node_modules/pako/lib/utils/common.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"node_modules/pako/lib/utils/common.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"node_modules/pako/lib/utils/common.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"node_modules/pako/lib/utils/common.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}}],"sources":{"node_modules/pako/lib/utils/common.js":"'use strict';\n\n\nconst _has = (obj, key) => {\n  return Object.prototype.hasOwnProperty.call(obj, key);\n};\n\nmodule.exports.assign = function (obj /*from1, from2, from3, ...*/) {\n  const sources = Array.prototype.slice.call(arguments, 1);\n  while (sources.length) {\n    const source = sources.shift();\n    if (!source) { continue; }\n\n    if (typeof source !== 'object') {\n      throw new TypeError(source + 'must be non-object');\n    }\n\n    for (const p in source) {\n      if (_has(source, p)) {\n        obj[p] = source[p];\n      }\n    }\n  }\n\n  return obj;\n};\n\n\n// Join array of chunks to single array.\nmodule.exports.flattenChunks = (chunks) => {\n  // calculate data length\n  let len = 0;\n\n  for (let i = 0, l = chunks.length; i < l; i++) {\n    len += chunks[i].length;\n  }\n\n  // join chunks\n  const result = new Uint8Array(len);\n\n  for (let i = 0, pos = 0, l = chunks.length; i < l; i++) {\n    let chunk = chunks[i];\n    result.set(chunk, pos);\n    pos += chunk.length;\n  }\n\n  return result;\n};\n"},"lineCount":49}},"error":null,"hash":"da6459ef5296c1114afba273e7e821dc","cacheData":{"env":{}}}